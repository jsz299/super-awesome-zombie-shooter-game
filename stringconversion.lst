


ARM Macro Assembler    Page 1 


    1 00000000         ; StringConversion.s
    2 00000000         ; Student names: Colton Berger & Jack Zhao
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; ECE319K lab 7 number to string conversions
    6 00000000         ;
    7 00000000         ; Used in ECE319K Labs 7,8,9,10. You write these two fun
                       ctions
    8 00000000         
    9 00000000         
   10 00000000                 EXPORT           Dec2String
   11 00000000                 EXPORT           Fix2String
   12 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   13 00000000                 THUMB
   14 00000000                 PRESERVE8
   15 00000000         
   16 00000000         
   17 00000000         ;-----------------------Dec2String----------------------
                       -
   18 00000000         ; Convert a 32-bit number into unsigned decimal format
   19 00000000         ; String the string into the empty array add null-termin
                       ation
   20 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   21 00000000         ;        R1 pointer to empty array
   22 00000000         ; Output: none
   23 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   24 00000000         Dec2String
   25 00000000 00000000 
                       rem     EQU              0
   26 00000000 00000004 
                       quo     EQU              4
   27 00000000 00000008 
                       num     EQU              8
   28 00000000 0000000C 
                       idx     EQU              12
   29 00000000         
   30 00000000 E92D 4800       PUSH{R11,        LR}
   31 00000004         
   32 00000004 B083            SUB              SP, #12     ;initialize locals
   33 00000006 46EB            MOV              R11, SP
   34 00000008 2800            CMP              R0, #0
   35 0000000A D028            BEQ              numIsZero
   36 0000000C F8CB 0008       STR              R0, [R11, #num]
   37 00000010 F04F 0000       MOV              R0, #0
   38 00000014 B401            PUSH{R0}
   39 00000016 F8CB 0000       STR              R0, [R11, #rem]
   40 0000001A F8CB 0004       STR              R0, [R11, #quo]
   41 0000001E         loop_Dec2String
   42 0000001E F8DB 0008       LDR              R0, [R11, #num]
   43 00000022 F04F 020A       MOV              R2, #10
   44 00000026 FBB0 F0F2       UDIV             R0, R0, R2
   45 0000002A F8CB 0004       STR              R0, [R11, #quo]
   46 0000002E FB00 F002       MUL              R0, R0, R2
   47 00000032 F8DB 2008       LDR              R2, [R11, #num]
   48 00000036 EBA2 0000       SUB              R0, R2, R0
   49 0000003A F8CB 0000       STR              R0, [R11, #rem]



ARM Macro Assembler    Page 2 


   50 0000003E F8DB 0004       LDR              R0, [R11, #quo]
   51 00000042 F8DB 2000       LDR              R2, [R11, #rem]
   52 00000046 1882            ADDS             R2, R0, R2
   53 00000048 D00F            BEQ              next_Dec2String
   54 0000004A F8DB 0000       LDR              R0, [R11, #rem]
   55 0000004E F100 0030       ADD              R0, #48
   56 00000052 B401            PUSH             {R0}
   57 00000054 F8DB 0004       LDR              R0, [R11, #quo]
   58 00000058 F8CB 0008       STR              R0, [R11, #num]
   59 0000005C E7DF            B                loop_Dec2String
   60 0000005E         
   61 0000005E         numIsZero
   62 0000005E F04F 0000       MOV              R0, #0
   63 00000062 B401            PUSH{R0}
   64 00000064 F04F 0030       MOV              R0, #48
   65 00000068 B401            PUSH{R0}
   66 0000006A         
   67 0000006A         next_Dec2String
   68 0000006A BC01            POP{R0}
   69 0000006C 7008            STRB             R0, [R1]
   70 0000006E 2800            CMP              R0, #0
   71 00000070 D002            BEQ              done_Dec2String
   72 00000072 F101 0101       ADD              R1, #1
   73 00000076 E7F8            B                next_Dec2String
   74 00000078         done_Dec2String
   75 00000078 B003            ADD              SP, #12
   76 0000007A E8BD 4800       POP{R11,         LR}
   77 0000007E 4770            BX               LR
   78 00000080         ;* * * * * * * * End of Dec2String * * * * * * * *
   79 00000080         
   80 00000080         
   81 00000080         ; -----------------------Fix2String---------------------
                       -
   82 00000080         ; Create characters for LCD display in fixed-point forma
                       t
   83 00000080         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   84 00000080         ; Inputs:  R0 is an unsigned 32-bit number
   85 00000080         ;          R1 pointer to empty array
   86 00000080         ; Outputs: none
   87 00000080         ; E.g., R0=0,    then create "0.000 "
   88 00000080         ;       R0=3,    then create "0.003"
   89 00000080         ;       R0=89,   then create "0.089"
   90 00000080         ;       R0=123,  then create "0.123"
   91 00000080         ;       R0=9999, then create "9.999"
   92 00000080         ;       R0>9999, then create "*.***"
   93 00000080         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   94 00000080         Fix2String
   95 00000080 E92D 4800       PUSH{R11,        LR}
   96 00000084         
   97 00000084 B084            SUB              SP, #16
   98 00000086 46EB            MOV              R11, SP
   99 00000088 F8CB 0008       STR              R0, [R11, #num]
  100 0000008C F04F 0005       MOV              R0, #5
  101 00000090 F8CB 000C       STR              R0, [R11, #idx]
  102 00000094 F04F 0000       MOV              R0, #0
  103 00000098 F8CB 0004       STR              R0, [R11, #quo]
  104 0000009C         



ARM Macro Assembler    Page 3 


  105 0000009C F8DB 200C       LDR              R2, [R11, #idx] ;null terminate
                                                            
  106 000000A0 5488            STRB             R0, [R1, R2]
  107 000000A2 F1A2 0201       SUB              R2, #1
  108 000000A6 F8CB 200C       STR              R2, [R11, #idx]
  109 000000AA         
  110 000000AA F8DB 0008       LDR              R0, [R11, #num]
  111 000000AE F242 720F       LDR              R2, =9999
  112 000000B2 4290            CMP              R0, R2
  113 000000B4 D826            BHI              printStars
  114 000000B6         
  115 000000B6         loop_Fix2String
  116 000000B6 F8DB 0008       LDR              R0, [R11, #num]
  117 000000BA F04F 020A       MOV              R2, #10
  118 000000BE FBB0 F0F2       UDIV             R0, R0, R2
  119 000000C2 F8CB 0004       STR              R0, [R11, #quo]
  120 000000C6 FB00 F202       MUL              R2, R0, R2
  121 000000CA F8DB 0008       LDR              R0, [R11, #num]
  122 000000CE EBA0 0002       SUB              R0, R0, R2  ;R0 has remainder
  123 000000D2 F8DB 200C       LDR              R2, [R11, #idx]
  124 000000D6 F100 0030       ADD              R0, #48
  125 000000DA 5488            STRB             R0, [R1, R2]
  126 000000DC F8DB 0004       LDR              R0, [R11, #quo]
  127 000000E0 F8CB 0008       STR              R0, [R11, #num]
  128 000000E4 F1A2 0201       SUB              R2, #1
  129 000000E8 F8CB 200C       STR              R2, [R11, #idx]
  130 000000EC 2A00            CMP              R2, #0
  131 000000EE DB1E            BLT              done_Fix2String
  132 000000F0 2A01            CMP              R2, #1
  133 000000F2 D1E0            BNE              loop_Fix2String
  134 000000F4 F04F 002E       MOV              R0, #'.'
  135 000000F8 5488            STRB             R0, [R1, R2]
  136 000000FA F1A2 0201       SUB              R2, #1
  137 000000FE F8CB 200C       STR              R2, [R11, #idx]
  138 00000102 E7D8            B                loop_Fix2String
  139 00000104         
  140 00000104         
  141 00000104         printStars
  142 00000104 F04F 002A       MOV              R0, #'*'
  143 00000108 F8DB 200C       LDR              R2, [R11, #idx]
  144 0000010C 5488            STRB             R0, [R1, R2]
  145 0000010E F1A2 0201       SUB              R2, #1
  146 00000112 F8CB 200C       STR              R2, [R11, #idx]
  147 00000116 2A00            CMP              R2, #0
  148 00000118 DB09            BLT              done_Fix2String
  149 0000011A 2A01            CMP              R2, #1
  150 0000011C D1F2            BNE              printStars
  151 0000011E F04F 002E       MOV              R0, #'.'
  152 00000122 5488            STRB             R0, [R1, R2]
  153 00000124 F1A2 0201       SUB              R2, #1
  154 00000128 F8CB 200C       STR              R2, [R11, #idx]
  155 0000012C E7EA            B                printStars
  156 0000012E         
  157 0000012E         done_Fix2String
  158 0000012E B004            ADD              SP, #16
  159 00000130         
  160 00000130 E8BD 4800       POP{R11,         LR}
  161 00000134 4770            BX               LR
  162 00000136         



ARM Macro Assembler    Page 4 


  163 00000136         
  164 00000136         
  165 00000136         
  166 00000136         
  167 00000136         
  168 00000136 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  169 00000138                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4 --fpu=
SoftVFP --depend=.\stringconversion.d -o.\stringconversion.o -I.\RTE\_SuperAwes
omeFunZombieShooterGame -IC:\Users\Home\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0
\CMSIS\Core\Include -IC:\Users\Home\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0
\Device\Include\TM4C123 --predefine="__UVISION_VERSION SETA 538" --predefine="_
RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --lis
t=.\stringconversion.lst ..\inc\StringConversion.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 12 in file ..\inc\StringConversion.s
   Uses
      None
Comment: .text unused
Dec2String 00000000

Symbol: Dec2String
   Definitions
      At line 24 in file ..\inc\StringConversion.s
   Uses
      At line 10 in file ..\inc\StringConversion.s
Comment: Dec2String used once
Fix2String 00000080

Symbol: Fix2String
   Definitions
      At line 94 in file ..\inc\StringConversion.s
   Uses
      At line 11 in file ..\inc\StringConversion.s
Comment: Fix2String used once
done_Dec2String 00000078

Symbol: done_Dec2String
   Definitions
      At line 74 in file ..\inc\StringConversion.s
   Uses
      At line 71 in file ..\inc\StringConversion.s
Comment: done_Dec2String used once
done_Fix2String 0000012E

Symbol: done_Fix2String
   Definitions
      At line 157 in file ..\inc\StringConversion.s
   Uses
      At line 131 in file ..\inc\StringConversion.s
      At line 148 in file ..\inc\StringConversion.s

loop_Dec2String 0000001E

Symbol: loop_Dec2String
   Definitions
      At line 41 in file ..\inc\StringConversion.s
   Uses
      At line 59 in file ..\inc\StringConversion.s
Comment: loop_Dec2String used once
loop_Fix2String 000000B6

Symbol: loop_Fix2String
   Definitions
      At line 115 in file ..\inc\StringConversion.s
   Uses
      At line 133 in file ..\inc\StringConversion.s
      At line 138 in file ..\inc\StringConversion.s

next_Dec2String 0000006A



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: next_Dec2String
   Definitions
      At line 67 in file ..\inc\StringConversion.s
   Uses
      At line 53 in file ..\inc\StringConversion.s
      At line 73 in file ..\inc\StringConversion.s

numIsZero 0000005E

Symbol: numIsZero
   Definitions
      At line 61 in file ..\inc\StringConversion.s
   Uses
      At line 35 in file ..\inc\StringConversion.s
Comment: numIsZero used once
printStars 00000104

Symbol: printStars
   Definitions
      At line 141 in file ..\inc\StringConversion.s
   Uses
      At line 113 in file ..\inc\StringConversion.s
      At line 150 in file ..\inc\StringConversion.s
      At line 155 in file ..\inc\StringConversion.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

idx 0000000C

Symbol: idx
   Definitions
      At line 28 in file ..\inc\StringConversion.s
   Uses
      At line 101 in file ..\inc\StringConversion.s
      At line 105 in file ..\inc\StringConversion.s
      At line 108 in file ..\inc\StringConversion.s
      At line 123 in file ..\inc\StringConversion.s
      At line 129 in file ..\inc\StringConversion.s
      At line 137 in file ..\inc\StringConversion.s
      At line 143 in file ..\inc\StringConversion.s
      At line 146 in file ..\inc\StringConversion.s
      At line 154 in file ..\inc\StringConversion.s

num 00000008

Symbol: num
   Definitions
      At line 27 in file ..\inc\StringConversion.s
   Uses
      At line 36 in file ..\inc\StringConversion.s
      At line 42 in file ..\inc\StringConversion.s
      At line 47 in file ..\inc\StringConversion.s
      At line 58 in file ..\inc\StringConversion.s
      At line 99 in file ..\inc\StringConversion.s
      At line 110 in file ..\inc\StringConversion.s
      At line 116 in file ..\inc\StringConversion.s
      At line 121 in file ..\inc\StringConversion.s
      At line 127 in file ..\inc\StringConversion.s

quo 00000004

Symbol: quo
   Definitions
      At line 26 in file ..\inc\StringConversion.s
   Uses
      At line 40 in file ..\inc\StringConversion.s
      At line 45 in file ..\inc\StringConversion.s
      At line 50 in file ..\inc\StringConversion.s
      At line 57 in file ..\inc\StringConversion.s
      At line 103 in file ..\inc\StringConversion.s
      At line 119 in file ..\inc\StringConversion.s
      At line 126 in file ..\inc\StringConversion.s

rem 00000000

Symbol: rem
   Definitions
      At line 25 in file ..\inc\StringConversion.s
   Uses
      At line 39 in file ..\inc\StringConversion.s
      At line 49 in file ..\inc\StringConversion.s
      At line 51 in file ..\inc\StringConversion.s
      At line 54 in file ..\inc\StringConversion.s

4 symbols
347 symbols in table
